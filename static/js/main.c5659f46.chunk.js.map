{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","heading","setHeading","message","setMessage","List","setList","useEffect","axios","get","then","incomingData","data","className","id","style","color","margin","marginLeft","marginTop","htmlFor","type","placeholder","onChange","e","target","value","required","width","height","onClick","post","alert","position","left","top","href","map","fontSize","bottom","right","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAqEeA,MAjEf,WACE,MAA0BC,mBAAS,YAAnC,mBAAQC,EAAR,KAAcC,EAAd,KACA,EAAgCF,mBAAS,eAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,6BAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAQO,EAAR,KAAcC,EAAd,KA4BA,OATAC,qBAAU,WACRC,IAAMC,IAAN,sEACCC,MAAK,SAACC,GACLL,EAAQK,EAAaC,WAGtB,CAACP,IAIF,sBAAKQ,UAAU,MAAf,UACE,oBAAIC,GAAG,MAAMD,UAAU,OAAOE,MAAO,CAACC,MAAO,QAASC,OAAO,OAAQC,WAAW,QAASC,UAAU,QAAnG,yBACA,sBAAMN,UAAU,OAAOE,MAAO,CAACC,MAAO,SAAtC,mLACA,sBAAKH,UAAU,cAAf,UACE,6CACA,iCACE,uBAAOO,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOP,GAAG,OAAOf,KAAK,OAAOuB,YAAavB,EAAMwB,SAAU,SAAAC,GAAC,OAAIxB,EAAQwB,EAAEC,OAAOC,QAAQC,UAAQ,IAAE,uBAC9G,uBAAOP,QAAQ,UAAf,qBACA,uBAAOC,KAAK,OAAOP,GAAG,UAAUf,KAAK,UAAUuB,YAAarB,EAASsB,SAAU,SAAAC,GAAC,OAAItB,EAAWsB,EAAEC,OAAOC,QAAQC,UAAQ,IAAE,uBAC1H,uBAAOP,QAAQ,UAAf,qBAAwC,uBACxC,0BAAUL,MAAO,CAACa,MAAO,MAAMC,OAAO,SAAUf,GAAG,UAAUf,KAAK,UAAUuB,YAAanB,EAASoB,SAAU,SAAAC,GAAC,OAAIpB,EAAWoB,EAAEC,OAAOC,QAAQC,UAAQ,IAAE,uBACvJ,wBAAQN,KAAK,SAASS,QAvCT,WAGT,aAAP/B,GAA+B,gBAAVI,GAAqC,8BAAVF,EAEjDO,IAAMuB,KAAN,qEACA,CACEhC,OAAKI,UAAQF,YAKf+B,MAAM,4BA2BF,2BAGJ,sBAAMjB,MAAO,CAACC,MAAM,QAAQiB,SAAS,WAAWC,KAAK,MAAMC,IAAI,SAA/D,SAAyE,mBAAGC,KAAK,SAAR,4CACzE,oBAAItB,GAAG,QAAQC,MAAO,CAACC,MAAM,QAASiB,SAAU,WAAYE,IAAK,QAASD,KAAM,MAAMN,MAAO,eAA7F,mBACA,qBAAKf,UAAU,YAAaE,MAAO,CAACC,MAAO,SAA3C,SACGX,EAAKgC,KAAI,SAAAN,GAAI,OACZ,sBAAKlB,UAAU,eAAf,UACE,6BAAKkB,EAAK9B,UACV,4BAAI8B,EAAK5B,UACT,uBAAMY,MAAO,CAACuB,SAAU,QAAxB,iBAAsCP,EAAKhC,gBAIjD,mBAAGgB,MAAO,CAACkB,SAAS,QAAQM,OAAQ,MAAOC,MAAO,KAAMxB,MAAO,SAAWoB,KAAK,OAA/E,gBACA,sBAAKrB,MAAO,CAAEkB,SAAU,QAASM,OAAQ,KAAMC,MAAO,KAAMxB,MAAO,SAAWH,UAAU,YAAxF,gBAAuG,qDCpD9F4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c5659f46.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [ name, setName ] = useState(\"John Doe\");\r\n  const [ heading, setHeading ] = useState(\"Hello World\");\r\n  const [ message, setMessage ] = useState(\"Hey I want to share my...\");\r\n  const [ List, setList ] = useState([]);\r\n  \r\n  const handleSubmit = () => {\r\n    // const data = [name,message]\r\n    // alert(data);\r\n    if(name!==\"John Doe\" && message!==\"Hello World\" && heading!==\"Hey I want to share my...\")\r\n    {\r\n      axios.post(`https://sheet.best/api/sheets/dd480f0f-16b9-40b1-ba7f-348b31058d71`,\r\n      {\r\n        name,message,heading\r\n      }\r\n      );\r\n    }\r\n    else{\r\n      alert(\"Give other than example\")\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://sheet.best/api/sheets/dd480f0f-16b9-40b1-ba7f-348b31058d71`)\r\n    .then((incomingData) => {\r\n      setList(incomingData.data)\r\n      // console.log(List);\r\n    })\r\n  }, [List]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 id=\"top\" className=\"Main\" style={{color: \"white\", margin:\"auto\", marginLeft:\"43.5%\", marginTop:\"50px\" }}>Uni Connect</h1>\r\n      <span className=\"desc\" style={{color: \"white\"}}>Uni Connect is an open blog/confession posts site. Here you can post anything and it will be visible to anyone and also you donot need any account creation for this.</span>\r\n      <div className=\"Create_Post\">\r\n        <h1>Create Post</h1>\r\n        <form>\r\n          <label htmlFor=\"Name\">Name </label>\r\n          <input type=\"text\" id=\"Name\" name=\"Name\" placeholder={name} onChange={e => setName(e.target.value)} required/><br />\r\n          <label htmlFor=\"Heading\">Heading</label>\r\n          <input type=\"text\" id=\"Heading\" name=\"Heading\" placeholder={heading} onChange={e => setHeading(e.target.value)} required/><br />\r\n          <label htmlFor=\"Message\">Message</label><br />\r\n          <textarea style={{width: \"80%\",height:\"150px\"}} id=\"Message\" name=\"Message\" placeholder={message} onChange={e => setMessage(e.target.value)} required/><br />\r\n          <button type=\"submit\" onClick={handleSubmit}>Submit </button>\r\n        </form>\r\n      </div>\r\n      <span style={{color:\"white\",position:\"relative\",left:\"42%\",top:\"100px\"}}><a href=\"#Posts\">Scroll Down to see the posts</a></span>\r\n      <h1 id=\"Posts\" style={{color:\"white\", position: \"relative\", top: \"140px\", left: \"47%\",width: \"fit-content\"}}>Posts</h1>\r\n      <div className=\"listitems\"  style={{color: \"white\"}}>\r\n        {List.map(post => (\r\n          <div className=\"PostListItem\">\r\n            <h2>{post.heading}</h2>\r\n            <p>{post.message}</p>\r\n            <span style={{fontSize: \"10px\"}}>By: {post.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <a style={{position:\"fixed\",bottom: \"15%\", right: \"5%\", color: \"white\" }} href=\"#top\">Up</a>\r\n      <div style={{ position: \"fixed\", bottom: \"2%\", right: \"2%\", color: \"white\" }} className=\"signature\">By <i>Hemanth Kumar</i></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}